service: rest-api-haskell

provider:
    name: aws
    stage: ${opt:stage, 'dev'}
    region: ${opt:region, 'us-east-1'}
    role: { Fn::GetAtt: [HaskellCrudRole, Arn] }
    environment:
        PRODUCTS_TABLE_NAME: ${self:custom.productsTableName}

custom:
    productsTableName: products-table-haskell-${self:provider.stage}

package:
    individually: true

functions:
    getProduct:
        runtime: provided
        memorySize: 1024
        description: "[${self:provider.stage}] Get products - CRUD Benchmark (Haskell)"
        handler: src/Lib.handler
        package:
            artifact: "functions/getProduct/build/function.zip"
        events:
            - http:
                  path: products/{sku}
                  method: get
                  cors: true

resources:
    Resources:
        ProductsTable:
            Type: AWS::DynamoDB::Table
            Properties:
                TableName: ${self:custom.productsTableName}
                AttributeDefinitions:
                    - AttributeName: sku
                      AttributeType: S
                KeySchema:
                    - AttributeName: sku
                      KeyType: HASH
                BillingMode: PAY_PER_REQUEST
        HaskellCrudRole:
            Type: AWS::IAM::Role
            Properties:
                RoleName: benchmark-haskell-role-${self:provider.stage}
                AssumeRolePolicyDocument:
                    Statement:
                        - Action: sts:AssumeRole
                          Effect: Allow
                          Principal:
                              Service: lambda.amazonaws.com
                    Version: "2012-10-17"
                Path: /
                Policies:
                    - PolicyDocument:
                          Statement:
                              - Action:
                                    - dynamodb:UpdateItem
                                    - dynamodb:PutItem
                                    - dynamodb:GetItem
                                    - dynamodb:DeleteItem
                                    - dynamodb:Query
                                    - dynamodb:Scan
                                Effect: Allow
                                Resource:
                                    - { Fn::GetAtt: [ProductsTable, Arn] }
                              - Action:
                                    - logs:CreateLogGroup
                                    - logs:CreateLogStream
                                    - logs:PutLogEvents
                                Effect: Allow
                                Resource: "*"
                          Version: "2012-10-17"
                      PolicyName: BenchMarkHaskellRoles${self:provider.stage}
