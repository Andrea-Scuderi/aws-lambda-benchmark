service: rest-api-csharp

provider:
    name: aws
    runtime: dotnetcore2.1
    stage: ${opt:stage, 'dev'}
    region: ${opt:region, 'us-east-1'}
    environment:
        PRODUCTS_TABLE_NAME: "${self:custom.productsTableName}"
    iamRoleStatements:
        - Effect: Allow
          Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
          Resource: "*"
        - Effect: Allow
          Action:
              - dynamodb:UpdateItem
              - dynamodb:PutItem
              - dynamodb:GetItem
              - dynamodb:DeleteItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:DescribeTable
          Resource:
              - { Fn::GetAtt: [ProductsTable, Arn] }

custom:
    productsTableName: products-table-csharp-${self:provider.stage}

package:
    individually: true

functions:
    getProduct:
        handler: CsharpRestApi::RestApi.GetProduct::Handler
        description: "[${self:provider.stage}] Get product - CRUD Benchmark (C#)"
        package:
            artifact: bin/release/netcoreapp2.1/csharp-rest-api.zip
        events:
            - http:
                  path: product/{sku}
                  method: get
                  cors: true

    createProduct:
        handler: CsharpRestApi::RestApi.CreateProduct::Handler
        description: "[${self:provider.stage}] Create product - CRUD Benchmark (C#)"
        package:
            artifact: bin/release/netcoreapp2.1/csharp-rest-api.zip
        events:
            - http:
                  path: product
                  method: post
                  cors: true
      
    updateProduct:
        handler: CsharpRestApi::RestApi.UpdateProduct::Handler
        description: "[${self:provider.stage}] Create product - CRUD Benchmark (C#)"
        package:
            artifact: bin/release/netcoreapp2.1/csharp-rest-api.zip
        events:
            - http:
                  path: product
                  method: put
                  cors: true
      
    deleteProduct:
        handler: CsharpRestApi::RestApi.DeleteProduct::Handler
        description: "[${self:provider.stage}] Delete product - CRUD Benchmark (C#)"
        package:
            artifact: bin/release/netcoreapp2.1/csharp-rest-api.zip
        events:
            - http:
                  path: product/{sku}
                  method: delete
                  cors: true
      
    listProducts:
        handler: CsharpRestApi::RestApi.ListProducts::Handler
        description: "[${self:provider.stage}] List products - CRUD Benchmark (C#)"
        package:
            artifact: bin/release/netcoreapp2.1/csharp-rest-api.zip
        events:
            - http:
                  path: products
                  method: get
                  cors: true

resources:
    Resources:
        ProductsTable:
            Type: AWS::DynamoDB::Table
            Properties:
                TableName: ${self:custom.productsTableName}
                AttributeDefinitions:
                    - AttributeName: sku
                      AttributeType: S
                KeySchema:
                    - AttributeName: sku
                      KeyType: HASH
                BillingMode: PAY_PER_REQUEST
